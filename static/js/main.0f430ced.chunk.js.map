{"version":3,"sources":["components/Comment.tsx","components/Commentators.tsx","components/CommentsBlock.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CommentContent","styled","div","AuthorAndDateContainer","Author","span","PublicationDate","Comment","comment","author","message","children","map","replyingComment","id","CommentatorsWrapper","li","AuthorsList","ul","Title","Commentators","authors","CommentsBlockWrapper","CommentsWrapper","CommentWrapper","CommentsBlock","useState","comments","setComments","setAuthors","a","fetch","then","res","json","data","getUniqueCommentators","commentsArr","authorsArr","forEach","item","push","length","concat","filter","index","indexOf","useEffect","gettingComments","gettingUniqueCommentators","Wrapper","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAIMA,EAAiBC,IAAOC,IAAV,oJAQdC,EAAyBF,IAAOC,IAAV,wGAMtBE,EAASH,IAAOI,KAAV,mDAINC,EAAkBL,IAAOC,IAAV,qDAQN,SAASK,EAAT,GAA4C,IAAzBC,EAAwB,EAAxBA,QAChC,OACE,eAACR,EAAD,WACE,eAACG,EAAD,WACE,cAACC,EAAD,UAASI,EAAQC,SACjB,cAACH,EAAD,kCAEF,+BAAOE,EAAQE,YACXF,EAAQG,UACPH,EAAQG,SAASC,KAAI,SAACC,GAAD,OACtB,cAACN,EAAD,CAAkCC,QAASK,GAA7BA,EAAgBC,UCrCxC,I,QAAMC,EAAsBd,IAAOC,IAAV,4BAGnBE,EAASH,IAAOe,GAAV,0BAENC,EAAchB,IAAOiB,GAAV,8CAIXC,EAAQlB,IAAOI,KAAV,iDAQI,SAASe,EAAT,GAEO,IADpBC,EACmB,EADnBA,QAEA,OACE,eAACN,EAAD,WACE,cAACI,EAAD,6BACA,cAACF,EAAD,UACII,EAAQT,KAAI,SAACH,GAAD,OACZ,cAAC,EAAD,UAAsBA,GAATA,WCtBvB,I,EAAMa,EAAuBrB,IAAOC,IAAV,sEAKpBqB,EAAkBtB,IAAOC,IAAV,2CAIfa,EAAsBd,IAAOC,IAAV,mHAOnBsB,EAAiBvB,IAAOC,IAAV,yKASL,SAASuB,IAAiB,IAAD,EACNC,mBAA+B,IADzB,mBAC/BC,EAD+B,KACrBC,EADqB,OAERF,mBAAwB,IAFhB,mBAE/BL,EAF+B,KAEtBQ,EAFsB,iDAItC,sBAAAC,EAAA,sDACEC,MAAM,sBACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAUP,EAAYO,MAHhC,4CAJsC,sBAUtC,SAASC,EAAsBC,GAC7B,IAAIC,EAA4B,GAShC,OARAD,EAAYE,SAAQ,SAACC,GACnBF,EAAWG,KAAKD,EAAK/B,QACQ,IAAzB+B,EAAK7B,SAAS+B,SAChBJ,EAAaA,EAAWK,OAAOP,EAAsBI,EAAK7B,eAIxC2B,EAAWM,QAAO,SAACJ,EAAMK,GAAP,OAAiBP,EAAWQ,QAAQN,KAAUK,KAnBlD,4CAuBtC,sBAAAf,EAAA,sDACED,EAAWO,EAAsBT,IADnC,4CAvBsC,sBAoCtC,OATAoB,qBAAU,WACgB,IAApBpB,EAASe,QA5BuB,mCA6BlCM,GAEuB,IAApBrB,EAASe,QAAqC,IAAnBrB,EAAQqB,QA/BJ,mCAgClCO,MAKF,eAAC3B,EAAD,WACE,cAACC,EAAD,UACII,EAASf,KAAI,SAACJ,GAAD,OACb,cAACgB,EAAD,UACE,cAACjB,EAAD,CAASC,QAASA,KADCA,EAAQM,SAKjC,cAAC,EAAD,UACE,cAACM,EAAD,CAAcC,QAASA,SCxE/B,IAAM6B,EAAUjD,IAAOC,IAAV,yEAcEiD,MATf,WACE,OACE,cAACD,EAAD,UACE,cAACzB,EAAD,OCCS2B,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0f430ced.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { IComment } from '../interfaces/IComment';\r\n\r\nconst CommentContent = styled.div`\r\n  min-width: 250px;\r\n  border-radius: 5px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 10px 0px 0px 10px;\r\n`;\r\n\r\nconst AuthorAndDateContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst Author = styled.span`\r\n  font-size: 1.2em;  \r\n`;\r\n\r\nconst PublicationDate = styled.div`\r\n  align-self: flex-end;\r\n`;\r\n\r\ntype CommentType = {\r\n  comment: IComment,\r\n}\r\n\r\nexport default function Comment({ comment }: CommentType) {\r\n  return (\r\n    <CommentContent>\r\n      <AuthorAndDateContainer>\r\n        <Author>{comment.author}</Author>\r\n        <PublicationDate>12:22 23.01.2021</PublicationDate>\r\n      </AuthorAndDateContainer>\r\n      <span>{comment.message}</span>\r\n      { !!comment.children\r\n        && comment.children.map((replyingComment) => (\r\n          <Comment key={replyingComment.id} comment={replyingComment} />\r\n        ))}\r\n    </CommentContent>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst CommentatorsWrapper = styled.div`\r\n`;\r\n\r\nconst Author = styled.li``;\r\n\r\nconst AuthorsList = styled.ul`\r\n  margin-top: 0;\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 1.2em;\r\n`;\r\n\r\ntype CommentatorsType = {\r\n  authors: Array<string>,\r\n}\r\n\r\nexport default function Commentators({\r\n  authors,\r\n}: CommentatorsType) {\r\n  return (\r\n    <CommentatorsWrapper>\r\n      <Title>Commentators: </Title>\r\n      <AuthorsList>\r\n        { authors.map((author) => (\r\n          <Author key={author}>{author}</Author>\r\n        )) }\r\n      </AuthorsList>\r\n    </CommentatorsWrapper>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { IComment } from '../interfaces/IComment';\r\nimport Comment from './Comment';\r\nimport Commentators from './Commentators';\r\n\r\nconst CommentsBlockWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst CommentsWrapper = styled.div`\r\n  width: 80%;\r\n`;\r\n\r\nconst CommentatorsWrapper = styled.div`\r\n  justify-self: flex-start;\r\n  padding-left: 5%;\r\n  width: 20%;\r\n  padding-top: 10px;\r\n`;\r\n\r\nconst CommentWrapper = styled.div`\r\n  width: 100%;\r\n  min-width: 250px;\r\n  // border-bottom: 1px solid red;\r\n  border-radius: 5px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport default function CommentsBlock() {\r\n  const [comments, setComments] = useState<Array<IComment> | []>([]);\r\n  const [authors, setAuthors] = useState<Array<string>>([]);\r\n\r\n  async function gettingComments() {\r\n    fetch('data/comments.json')\r\n      .then((res) => res.json())\r\n      .then((data) => setComments(data));\r\n  }\r\n\r\n  function getUniqueCommentators(commentsArr: Array<IComment>) {\r\n    let authorsArr: Array<string> = [];\r\n    commentsArr.forEach((item: IComment) => {\r\n      authorsArr.push(item.author);\r\n      if (item.children.length !== 0) {\r\n        authorsArr = authorsArr.concat(getUniqueCommentators(item.children));\r\n      }\r\n    });\r\n\r\n    const uniqueAuthors = authorsArr.filter((item, index) => authorsArr.indexOf(item) === index);\r\n    return uniqueAuthors;\r\n  }\r\n\r\n  async function gettingUniqueCommentators() {\r\n    setAuthors(getUniqueCommentators(comments));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (comments.length === 0) {\r\n      gettingComments();\r\n    }\r\n    if ((comments.length !== 0) && (authors.length === 0)) {\r\n      gettingUniqueCommentators();\r\n    }\r\n  });\r\n\r\n  return (\r\n    <CommentsBlockWrapper>\r\n      <CommentsWrapper>\r\n        { comments.map((comment: IComment) => (\r\n          <CommentWrapper key={comment.id}>\r\n            <Comment comment={comment} />\r\n          </CommentWrapper>\r\n        )) }\r\n      </CommentsWrapper>\r\n      <CommentatorsWrapper>\r\n        <Commentators authors={authors} />\r\n      </CommentatorsWrapper>\r\n    </CommentsBlockWrapper>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport styled from 'styled-components';\r\nimport CommentsBlock from './components/CommentsBlock';\r\n\r\nconst Wrapper = styled.div`\r\n  width: 65%;\r\n  margin: 150px auto 0 auto;\r\n`;\r\n\r\nfunction App() {\r\n  return (\r\n    <Wrapper>\r\n      <CommentsBlock />\r\n      {/* <Commentators /> */}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}